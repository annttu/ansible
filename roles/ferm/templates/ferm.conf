# File managed by ansible
# -*- shell-script -*-
#
#  Configuration file for ferm(1).
#

@include "defs/";

table filter {
    chain INPUT {
        policy DROP;

        # allow local packets
        interface lo ACCEPT;

        # connection tracking
        mod state state INVALID DROP;
        mod state state (ESTABLISHED RELATED) ACCEPT;

        # Banned chain to filter out banned sources
        jump banned;

        # ICMP: rate-limited
        proto icmp mod limit limit 20/s ACCEPT;

        # TCP: syn floods
        proto tcp syn @subchain synflood {
            # ssh within limit 50/s -> allow
            dport 22 mod limit limit 50/s limit-burst 150 RETURN;

            # default within limit 250/s -> allow
            mod limit limit 250/s limit-burst 500 RETURN;

            # over limit -> deny
            DROP;
        }
        # SSH: always allow
        proto tcp dport ssh ACCEPT;

        ## Open services
        @include "input/";

        ## Reject gracefully unless DDOS
        proto tcp syn mod limit limit 1/s limit-burst 5 LOG log-prefix "Dropped syn ";
        proto tcp syn mod limit limit 20/s limit-burst 5 REJECT;
        proto tcp syn DROP;

        proto tcp mod limit limit 20/s REJECT reject-with tcp-reset;
        proto !tcp mod limit limit 20/s REJECT;

        # XXX: policy-redundancy
        DROP;
    }
    chain OUTPUT {
        policy ACCEPT;

        # connection tracking
        #mod state state INVALID DROP;
        #mod state state (ESTABLISHED RELATED) ACCEPT;

        @include "output/";
    }
    chain FORWARD {
        policy DROP;

        # connection tracking
        #mod state state INVALID DROP;
        #mod state state (ESTABLISHED RELATED) ACCEPT;

        @include "forward/";
    }

    chain banned {

    }
}

{% if ferm_raw_table %}
table raw {
    chain PREROUTING {
        @include "raw_prerouting/";
    }
}
{% endif %}
{% if ferm_ipv6 %}
# IPv6:
domain ip6 {
    table filter {
        chain INPUT {
            policy DROP;

            # allow local packets
            interface lo ACCEPT;

            # connection tracking
            mod state state INVALID DROP;
            mod state state (ESTABLISHED RELATED) ACCEPT;

            # ICMPv6
            proto icmpv6 ACCEPT;

            # TCP: syn floods
            #proto tcp syn jump synflood;

            # SSH: always allow
            proto tcp dport ssh ACCEPT;

            @include "input6/";

            proto tcp mod limit limit 20/s REJECT reject-with tcp-reset;
            proto !tcp mod limit limit 20/s REJECT;

        }

        chain OUTPUT {
            policy ACCEPT;

            ## Open services
            @include "output6/";
        }

        chain FORWARD {
            policy DROP;
            @include "forward6/";
        }
    }
    {% if ferm_raw_table %}
    table raw {
        chain PREROUTING {
           @include "raw_prerouting6/";
        }
    }
    {% endif %}
}
{% endif %}
